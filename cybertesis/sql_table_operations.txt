-- Vista de tesis_full, es un join de muchas tablas que muestra casi todas las columnas de todas las tablas relacionadas a tesis
-- En esta vista se realiza la busqueda en todas las columnas cuando un usuario ingresa una palabra en el buscador
CREATE OR REPLACE FUNCTION refresh_full() returns void
AS
$BODY$
declare
begin
    create or replace view tesis_full
as
select t.id as id, t.added_date, t.title, t.description, t.year, t.career_id, tc.name as career_name,
tf.name as faculty_name, tf.place, ti.id as institution_id, ti.name as institution_name,
array_to_string(array_agg(distinct aa.name),',') AS authors,
array_to_string(array_agg(distinct at.name),',') AS tutors,
round(coalesce(avg(tr.value),0),0) as rating,
array_to_string(array_agg(distinct tsub.id),'|') AS subs_id,
array_to_string(array_agg(distinct tsub.sub_category_name),'|') AS subs_name,
array_to_string(array_agg(distinct tcat.id),'|') AS cats_id,
array_to_string(array_agg(distinct tcat.category_name),'|') AS cats_name
from tesis_tesis t
join tesis_career tc on tc.id = t.career_id
join tesis_faculty tf on tf.id = tc.faculty_id
join tesis_institution ti on ti.id = tf.institution_id
join tesis_tesis_author tta on tta.tesis_id = t.id
join tesis_person aa on tta.person_id = aa.id
join tesis_tesis_tutor ttt on ttt.tesis_id = t.id
join tesis_person at on ttt.person_id = at.id
join tesis_tesis_sub_category tt on tt.tesis_id = t.id
join tesis_sub_category_categories ts on ts.subcategory_id = tt.subcategory_id
join tesis_sub_category tsub on ts.subcategory_id = tsub.id
join tesis_category tcat on ts.category_id = tcat.id
left join tesis_tesis_ranking tr on tr.tesis_id = t.id
group by t.id, t.added_date, t.title, t.description, t.year, t.career_id, tc.name, tf.name, tf.place, ti.id, ti.name
order by t.year DESC, t.added_date DESC;
end;
$BODY$
  LANGUAGE plpgsql VOLATILE;

--Para actualizar la vista
select refresh_full();